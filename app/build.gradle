apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'hugo'
apply plugin: 'io.fabric'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
  compileSdkVersion compile_sdk_version
  defaultConfig {
    applicationId rootProject.application_id
    minSdkVersion rootProject.min_sdk_version
    targetSdkVersion target_sdk_version
    versionCode rootProject.version_code

    int versionMajor = 0
    int versionMinor = 0
    int versionPatch = rootProject.version_code

    if (1000 > versionPatch && versionPatch > 99) {
      versionMajor = versionPatch / 100
      versionMinor = (versionPatch % 100) / 10
      versionPatch = (versionPatch % 100) % 10
    } else if (100 > versionCode && versionPatch > 9) {
      versionMajor = 0
      versionMinor = versionPatch / 10
      versionPatch = versionPatch % 10
    } else if (versionPatch < 10) {
      versionMajor = 0
      versionMinor = 0
      versionPatch = versionPatch / 1
    }

    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    multiDexEnabled true
    vectorDrawables.useSupportLibrary = true
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  signingConfigs {
    release {
      keyAlias keystoreProperties['keyAlias']
      keyPassword keystoreProperties['keyPassword']
      storeFile file(keystoreProperties['storeFile'])
      storePassword keystoreProperties['storePassword']
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
      minifyEnabled false

      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

      android.applicationVariants.all { variant ->
        variant.outputs.all {
          def formattedDate = new Date().format('yyyyMMddHHmmss')
          def appName = variant.getApplicationId().split(/[.]/)[3]
          outputFileName =
              "${appName}-${variant.name}-${variant.versionCode}-${variant.versionName}-${formattedDate}.apk"
        }
      }
    }
  }

  compileOptions {
    targetCompatibility JavaVersion.VERSION_1_8
    sourceCompatibility JavaVersion.VERSION_1_8
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
  }

  dataBinding {
    enabled = true
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation files('libs/YouTubeAndroidPlayerApi.jar')

  implementation 'com.android.support.constraint:constraint-layout:1.1.3'
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

  implementation "com.android.support:appcompat-v7:$rootProject.support_version"
  implementation "com.android.support:support-v4:$rootProject.support_version"
  implementation "com.android.support:support-media-compat:$rootProject.support_version"
  implementation "com.android.support:customtabs:$rootProject.support_version"
  implementation "com.android.support:design:$rootProject.support_version"
  implementation "com.android.support.constraint:constraint-layout:$rootProject.constraint_version"
  implementation "com.android.support:cardview-v7:$rootProject.support_version"

  // dagger
  implementation "com.google.dagger:dagger:$rootProject.dagger_version"
  implementation "com.google.dagger:dagger-android-support:$rootProject.dagger_version"
  annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger_version"
  annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger_version"

  // glide
  implementation "com.github.bumptech.glide:glide:$rootProject.glide_version"
  annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glide_version"

  // butterknife
  implementation "com.jakewharton:butterknife:$rootProject.butterknife_version"
  annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknife_version"

  // rxjava
  implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava_version"
  implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroid_version"
  implementation "com.jakewharton.rxbinding2:rxbinding:$rootProject.rxbinding2_version"

  // timber
  implementation "com.jakewharton.timber:timber:$rootProject.timber_version"

  // lombok
  compileOnly "org.projectlombok:lombok:$rootProject.lombok_version"
  annotationProcessor "org.projectlombok:lombok:$rootProject.lombok_version"
  compileOnly 'javax.annotation:jsr250-api:1.0'

  // retrofit
  implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
  implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_version"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit_version"
  implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3_version"
  implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttp3_version"
  implementation 'com.orhanobut:logger:2.2.0'

  // firebase
  implementation "com.google.firebase:firebase-ads:$rootProject.firebase_ads_version"
  implementation "com.google.firebase:firebase-core:$rootProject.firebase_core_version"

  // crashlytics
  implementation "com.crashlytics.sdk.android:crashlytics:$rootProject.firebase_crashlytics_version"
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

// Add to the bottom of the file
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android-extensions'
